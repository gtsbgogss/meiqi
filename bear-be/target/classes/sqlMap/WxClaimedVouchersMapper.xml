<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bear.web.mapper.WxClaimedVouchersMapper">

    <resultMap id="baseResultMap" type="com.bear.web.entity.WxClaimedVouchers">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="store_id" property="storeId" jdbcType="INTEGER"/>
        <result column="promotion_type_id" property="promotionTypeId" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="head_img_url" property="headImgUrl" jdbcType="VARCHAR"/>
        <result column="coupon_id" property="couponId" jdbcType="INTEGER"/>
        <result column="award" property="award" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_on" property="createon" jdbcType="VARCHAR"/>
        <result column="update_on" property="updateon" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="bargain_event_id" property="bargainEventId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tableName">wx_claimed_vouchers</sql>
    <sql id="defaultState">0</sql>

    <insert id="dynamicInsert" parameterType="com.bear.web.entity.WxClaimedVouchers" useGeneratedKeys="true" keyProperty="id">
       <!-- <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>-->
        insert into
        <include refid="tableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeId != null">
                store_id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="headImgUrl != null">
                head_img_url,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="promotionTypeId != null">
                promotion_type_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="couponId != null">
                coupon_id,
            </if>
            <if test="award != null">
                award,
            </if>
            <if test="createon != null">
                create_on,
            </if>
            <if test="updateon != null">
                update_on,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="bargainEventId != null">
                bargain_event_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storeId != null">
                #{storeId},
            </if>
            <if test="openid != null">
                #{openid},
            </if>
            <if test="nickName != null">
                #{nickName},
            </if>
            <if test="headImgUrl != null">
                #{headImgUrl},
            </if>
            <if test="productId != null">
                #{productId},
            </if>
            <if test="promotionTypeId != null">
                #{promotionTypeId},
            </if>
            <if test="productName != null">
                #{productName},
            </if>
            <if test="couponId != null">
                #{couponId},
            </if>
            <if test="award != null">
                #{award},
            </if>
            <if test="createon != null">
                #{createon},
            </if>
            <if test="updateon != null">
                #{updateon},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="bargainEventId != null">
                #{bargainEventId},
            </if>
        </trim>
    </insert>

    <select id="selectByOpenId" parameterType="java.lang.String" resultMap="baseResultMap">
        select * from <include refid="tableName"/>
        where state = <include refid="defaultState"/>
        and status = 0
        and openid = #{openid}
    </select>


    <update id="batchUpdateState" parameterType="java.util.List">
        update
        <include refid="tableName"/>
        set state = 2, status = 1
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>


</mapper>